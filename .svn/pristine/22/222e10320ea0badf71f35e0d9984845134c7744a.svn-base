package com.evmtv.epg.entity;

import java.util.ArrayList;
import java.util.List;

import com.evmtv.epg.request.BaseRequest;

public class TAdvClassConfigExample  extends BaseRequest{
    /**
	 * @field serialVersionUID
	 * @field_type long
	 */
	private static final long serialVersionUID = 5461494791377771101L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public TAdvClassConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFpositionidIsNull() {
            addCriterion("FPositionId is null");
            return (Criteria) this;
        }

        public Criteria andFpositionidIsNotNull() {
            addCriterion("FPositionId is not null");
            return (Criteria) this;
        }

        public Criteria andFpositionidEqualTo(Integer value) {
            addCriterion("FPositionId =", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidNotEqualTo(Integer value) {
            addCriterion("FPositionId <>", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidGreaterThan(Integer value) {
            addCriterion("FPositionId >", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidGreaterThanOrEqualTo(Integer value) {
            addCriterion("FPositionId >=", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidLessThan(Integer value) {
            addCriterion("FPositionId <", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidLessThanOrEqualTo(Integer value) {
            addCriterion("FPositionId <=", value, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidIn(List<Integer> values) {
            addCriterion("FPositionId in", values, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidNotIn(List<Integer> values) {
            addCriterion("FPositionId not in", values, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidBetween(Integer value1, Integer value2) {
            addCriterion("FPositionId between", value1, value2, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFpositionidNotBetween(Integer value1, Integer value2) {
            addCriterion("FPositionId not between", value1, value2, "fpositionid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNull() {
            addCriterion("FBranchId is null");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNotNull() {
            addCriterion("FBranchId is not null");
            return (Criteria) this;
        }

        public Criteria andFbranchidEqualTo(Long value) {
            addCriterion("FBranchId =", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotEqualTo(Long value) {
            addCriterion("FBranchId <>", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThan(Long value) {
            addCriterion("FBranchId >", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThanOrEqualTo(Long value) {
            addCriterion("FBranchId >=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThan(Long value) {
            addCriterion("FBranchId <", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThanOrEqualTo(Long value) {
            addCriterion("FBranchId <=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIn(List<Long> values) {
            addCriterion("FBranchId in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotIn(List<Long> values) {
            addCriterion("FBranchId not in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidBetween(Long value1, Long value2) {
            addCriterion("FBranchId between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotBetween(Long value1, Long value2) {
            addCriterion("FBranchId not between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIsNull() {
            addCriterion("FDefinition is null");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIsNotNull() {
            addCriterion("FDefinition is not null");
            return (Criteria) this;
        }

        public Criteria andFdefinitionEqualTo(String value) {
            addCriterion("FDefinition =", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotEqualTo(String value) {
            addCriterion("FDefinition <>", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionGreaterThan(String value) {
            addCriterion("FDefinition >", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionGreaterThanOrEqualTo(String value) {
            addCriterion("FDefinition >=", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLessThan(String value) {
            addCriterion("FDefinition <", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLessThanOrEqualTo(String value) {
            addCriterion("FDefinition <=", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLike(String value) {
            addCriterion("FDefinition like", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotLike(String value) {
            addCriterion("FDefinition not like", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIn(List<String> values) {
            addCriterion("FDefinition in", values, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotIn(List<String> values) {
            addCriterion("FDefinition not in", values, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionBetween(String value1, String value2) {
            addCriterion("FDefinition between", value1, value2, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotBetween(String value1, String value2) {
            addCriterion("FDefinition not between", value1, value2, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFwidthIsNull() {
            addCriterion("FWidth is null");
            return (Criteria) this;
        }

        public Criteria andFwidthIsNotNull() {
            addCriterion("FWidth is not null");
            return (Criteria) this;
        }

        public Criteria andFwidthEqualTo(Integer value) {
            addCriterion("FWidth =", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthNotEqualTo(Integer value) {
            addCriterion("FWidth <>", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthGreaterThan(Integer value) {
            addCriterion("FWidth >", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthGreaterThanOrEqualTo(Integer value) {
            addCriterion("FWidth >=", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthLessThan(Integer value) {
            addCriterion("FWidth <", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthLessThanOrEqualTo(Integer value) {
            addCriterion("FWidth <=", value, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthIn(List<Integer> values) {
            addCriterion("FWidth in", values, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthNotIn(List<Integer> values) {
            addCriterion("FWidth not in", values, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthBetween(Integer value1, Integer value2) {
            addCriterion("FWidth between", value1, value2, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFwidthNotBetween(Integer value1, Integer value2) {
            addCriterion("FWidth not between", value1, value2, "fwidth");
            return (Criteria) this;
        }

        public Criteria andFheightIsNull() {
            addCriterion("FHeight is null");
            return (Criteria) this;
        }

        public Criteria andFheightIsNotNull() {
            addCriterion("FHeight is not null");
            return (Criteria) this;
        }

        public Criteria andFheightEqualTo(Integer value) {
            addCriterion("FHeight =", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightNotEqualTo(Integer value) {
            addCriterion("FHeight <>", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightGreaterThan(Integer value) {
            addCriterion("FHeight >", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightGreaterThanOrEqualTo(Integer value) {
            addCriterion("FHeight >=", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightLessThan(Integer value) {
            addCriterion("FHeight <", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightLessThanOrEqualTo(Integer value) {
            addCriterion("FHeight <=", value, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightIn(List<Integer> values) {
            addCriterion("FHeight in", values, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightNotIn(List<Integer> values) {
            addCriterion("FHeight not in", values, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightBetween(Integer value1, Integer value2) {
            addCriterion("FHeight between", value1, value2, "fheight");
            return (Criteria) this;
        }

        public Criteria andFheightNotBetween(Integer value1, Integer value2) {
            addCriterion("FHeight not between", value1, value2, "fheight");
            return (Criteria) this;
        }

        public Criteria andFsizeIsNull() {
            addCriterion("FSize is null");
            return (Criteria) this;
        }

        public Criteria andFsizeIsNotNull() {
            addCriterion("FSize is not null");
            return (Criteria) this;
        }

        public Criteria andFsizeEqualTo(Integer value) {
            addCriterion("FSize =", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeNotEqualTo(Integer value) {
            addCriterion("FSize <>", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeGreaterThan(Integer value) {
            addCriterion("FSize >", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("FSize >=", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeLessThan(Integer value) {
            addCriterion("FSize <", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeLessThanOrEqualTo(Integer value) {
            addCriterion("FSize <=", value, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeIn(List<Integer> values) {
            addCriterion("FSize in", values, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeNotIn(List<Integer> values) {
            addCriterion("FSize not in", values, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeBetween(Integer value1, Integer value2) {
            addCriterion("FSize between", value1, value2, "fsize");
            return (Criteria) this;
        }

        public Criteria andFsizeNotBetween(Integer value1, Integer value2) {
            addCriterion("FSize not between", value1, value2, "fsize");
            return (Criteria) this;
        }

        public Criteria andFformatIsNull() {
            addCriterion("FFormat is null");
            return (Criteria) this;
        }

        public Criteria andFformatIsNotNull() {
            addCriterion("FFormat is not null");
            return (Criteria) this;
        }

        public Criteria andFformatEqualTo(String value) {
            addCriterion("FFormat =", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatNotEqualTo(String value) {
            addCriterion("FFormat <>", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatGreaterThan(String value) {
            addCriterion("FFormat >", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatGreaterThanOrEqualTo(String value) {
            addCriterion("FFormat >=", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatLessThan(String value) {
            addCriterion("FFormat <", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatLessThanOrEqualTo(String value) {
            addCriterion("FFormat <=", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatLike(String value) {
            addCriterion("FFormat like", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatNotLike(String value) {
            addCriterion("FFormat not like", value, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatIn(List<String> values) {
            addCriterion("FFormat in", values, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatNotIn(List<String> values) {
            addCriterion("FFormat not in", values, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatBetween(String value1, String value2) {
            addCriterion("FFormat between", value1, value2, "fformat");
            return (Criteria) this;
        }

        public Criteria andFformatNotBetween(String value1, String value2) {
            addCriterion("FFormat not between", value1, value2, "fformat");
            return (Criteria) this;
        }

        public Criteria andFtimeIsNull() {
            addCriterion("FTime is null");
            return (Criteria) this;
        }

        public Criteria andFtimeIsNotNull() {
            addCriterion("FTime is not null");
            return (Criteria) this;
        }

        public Criteria andFtimeEqualTo(Double value) {
            addCriterion("FTime =", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeNotEqualTo(Double value) {
            addCriterion("FTime <>", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeGreaterThan(Double value) {
            addCriterion("FTime >", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeGreaterThanOrEqualTo(Double value) {
            addCriterion("FTime >=", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeLessThan(Double value) {
            addCriterion("FTime <", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeLessThanOrEqualTo(Double value) {
            addCriterion("FTime <=", value, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeIn(List<Double> values) {
            addCriterion("FTime in", values, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeNotIn(List<Double> values) {
            addCriterion("FTime not in", values, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeBetween(Double value1, Double value2) {
            addCriterion("FTime between", value1, value2, "ftime");
            return (Criteria) this;
        }

        public Criteria andFtimeNotBetween(Double value1, Double value2) {
            addCriterion("FTime not between", value1, value2, "ftime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_adv_class_config
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 21 23:45:14 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_adv_class_config
     *
     * @mbggenerated Wed Aug 21 23:45:14 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = "config."+condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = "config."+condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = "config."+condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}