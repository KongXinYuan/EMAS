package com.evmtv.epg.entity;

import java.util.ArrayList;
import java.util.List;

import com.evmtv.epg.request.BaseRequest;

public class TVersionAdvExample extends BaseRequest{
    /**
	 * @field serialVersionUID
	 * @field_type long
	 */
	private static final long serialVersionUID = -5498929240955375692L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public TVersionAdvExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFadvidIsNull() {
            addCriterion("FAdvId is null");
            return (Criteria) this;
        }

        public Criteria andFadvidIsNotNull() {
            addCriterion("FAdvId is not null");
            return (Criteria) this;
        }

        public Criteria andFadvidEqualTo(Long value) {
            addCriterion("FAdvId =", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidNotEqualTo(Long value) {
            addCriterion("FAdvId <>", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidGreaterThan(Long value) {
            addCriterion("FAdvId >", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidGreaterThanOrEqualTo(Long value) {
            addCriterion("FAdvId >=", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidLessThan(Long value) {
            addCriterion("FAdvId <", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidLessThanOrEqualTo(Long value) {
            addCriterion("FAdvId <=", value, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidIn(List<Long> values) {
            addCriterion("FAdvId in", values, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidNotIn(List<Long> values) {
            addCriterion("FAdvId not in", values, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidBetween(Long value1, Long value2) {
            addCriterion("FAdvId between", value1, value2, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFadvidNotBetween(Long value1, Long value2) {
            addCriterion("FAdvId not between", value1, value2, "fadvid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidIsNull() {
            addCriterion("FReleaseVersionId is null");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidIsNotNull() {
            addCriterion("FReleaseVersionId is not null");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidEqualTo(Long value) {
            addCriterion("FReleaseVersionId =", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidNotEqualTo(Long value) {
            addCriterion("FReleaseVersionId <>", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidGreaterThan(Long value) {
            addCriterion("FReleaseVersionId >", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidGreaterThanOrEqualTo(Long value) {
            addCriterion("FReleaseVersionId >=", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidLessThan(Long value) {
            addCriterion("FReleaseVersionId <", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidLessThanOrEqualTo(Long value) {
            addCriterion("FReleaseVersionId <=", value, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidIn(List<Long> values) {
            addCriterion("FReleaseVersionId in", values, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidNotIn(List<Long> values) {
            addCriterion("FReleaseVersionId not in", values, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidBetween(Long value1, Long value2) {
            addCriterion("FReleaseVersionId between", value1, value2, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFreleaseversionidNotBetween(Long value1, Long value2) {
            addCriterion("FReleaseVersionId not between", value1, value2, "freleaseversionid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNull() {
            addCriterion("FBranchid is null");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNotNull() {
            addCriterion("FBranchid is not null");
            return (Criteria) this;
        }

        public Criteria andFbranchidEqualTo(Long value) {
            addCriterion("FBranchid =", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotEqualTo(Long value) {
            addCriterion("FBranchid <>", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThan(Long value) {
            addCriterion("FBranchid >", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThanOrEqualTo(Long value) {
            addCriterion("FBranchid >=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThan(Long value) {
            addCriterion("FBranchid <", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThanOrEqualTo(Long value) {
            addCriterion("FBranchid <=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIn(List<Long> values) {
            addCriterion("FBranchid in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotIn(List<Long> values) {
            addCriterion("FBranchid not in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidBetween(Long value1, Long value2) {
            addCriterion("FBranchid between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotBetween(Long value1, Long value2) {
            addCriterion("FBranchid not between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIsNull() {
            addCriterion("FDefinition is null");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIsNotNull() {
            addCriterion("FDefinition is not null");
            return (Criteria) this;
        }

        public Criteria andFdefinitionEqualTo(String value) {
            addCriterion("FDefinition =", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotEqualTo(String value) {
            addCriterion("FDefinition <>", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionGreaterThan(String value) {
            addCriterion("FDefinition >", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionGreaterThanOrEqualTo(String value) {
            addCriterion("FDefinition >=", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLessThan(String value) {
            addCriterion("FDefinition <", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLessThanOrEqualTo(String value) {
            addCriterion("FDefinition <=", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionLike(String value) {
            addCriterion("FDefinition like", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotLike(String value) {
            addCriterion("FDefinition not like", value, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionIn(List<String> values) {
            addCriterion("FDefinition in", values, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotIn(List<String> values) {
            addCriterion("FDefinition not in", values, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionBetween(String value1, String value2) {
            addCriterion("FDefinition between", value1, value2, "fdefinition");
            return (Criteria) this;
        }

        public Criteria andFdefinitionNotBetween(String value1, String value2) {
            addCriterion("FDefinition not between", value1, value2, "fdefinition");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_version_adv
     *
     * @mbggenerated do_not_delete_during_merge Sat Nov 09 13:07:32 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_version_adv
     *
     * @mbggenerated Sat Nov 09 13:07:32 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}