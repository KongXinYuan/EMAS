package com.evmtv.epg.entity;

import java.util.ArrayList;
import java.util.List;

import com.evmtv.epg.request.BaseRequest;

public class TUserNodeExample extends BaseRequest{
    /**
	 * @field serialVersionUID
	 * @field_type long
	 */
	private static final long serialVersionUID = 1L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public TUserNodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNull() {
            addCriterion("FBranchId is null");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNotNull() {
            addCriterion("FBranchId is not null");
            return (Criteria) this;
        }

        public Criteria andFbranchidEqualTo(Long value) {
            addCriterion("FBranchId =", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotEqualTo(Long value) {
            addCriterion("FBranchId <>", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThan(Long value) {
            addCriterion("FBranchId >", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThanOrEqualTo(Long value) {
            addCriterion("FBranchId >=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThan(Long value) {
            addCriterion("FBranchId <", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThanOrEqualTo(Long value) {
            addCriterion("FBranchId <=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIn(List<Long> values) {
            addCriterion("FBranchId in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotIn(List<Long> values) {
            addCriterion("FBranchId not in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidBetween(Long value1, Long value2) {
            addCriterion("FBranchId between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotBetween(Long value1, Long value2) {
            addCriterion("FBranchId not between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFnodeidIsNull() {
            addCriterion("FNodeId is null");
            return (Criteria) this;
        }

        public Criteria andFnodeidIsNotNull() {
            addCriterion("FNodeId is not null");
            return (Criteria) this;
        }

        public Criteria andFnodeidEqualTo(Long value) {
            addCriterion("FNodeId =", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidNotEqualTo(Long value) {
            addCriterion("FNodeId <>", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidGreaterThan(Long value) {
            addCriterion("FNodeId >", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidGreaterThanOrEqualTo(Long value) {
            addCriterion("FNodeId >=", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidLessThan(Long value) {
            addCriterion("FNodeId <", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidLessThanOrEqualTo(Long value) {
            addCriterion("FNodeId <=", value, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidIn(List<Long> values) {
            addCriterion("FNodeId in", values, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidNotIn(List<Long> values) {
            addCriterion("FNodeId not in", values, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidBetween(Long value1, Long value2) {
            addCriterion("FNodeId between", value1, value2, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFnodeidNotBetween(Long value1, Long value2) {
            addCriterion("FNodeId not between", value1, value2, "fnodeid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIsNull() {
            addCriterion("FUserGroupId is null");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIsNotNull() {
            addCriterion("FUserGroupId is not null");
            return (Criteria) this;
        }

        public Criteria andFusergroupidEqualTo(Long value) {
            addCriterion("FUserGroupId =", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotEqualTo(Long value) {
            addCriterion("FUserGroupId <>", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidGreaterThan(Long value) {
            addCriterion("FUserGroupId >", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidGreaterThanOrEqualTo(Long value) {
            addCriterion("FUserGroupId >=", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidLessThan(Long value) {
            addCriterion("FUserGroupId <", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidLessThanOrEqualTo(Long value) {
            addCriterion("FUserGroupId <=", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIn(List<Long> values) {
            addCriterion("FUserGroupId in", values, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotIn(List<Long> values) {
            addCriterion("FUserGroupId not in", values, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidBetween(Long value1, Long value2) {
            addCriterion("FUserGroupId between", value1, value2, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotBetween(Long value1, Long value2) {
            addCriterion("FUserGroupId not between", value1, value2, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFisgroupIsNull() {
            addCriterion("FIsGroup is null");
            return (Criteria) this;
        }

        public Criteria andFisgroupIsNotNull() {
            addCriterion("FIsGroup is not null");
            return (Criteria) this;
        }

        public Criteria andFisgroupEqualTo(String value) {
            addCriterion("FIsGroup =", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupNotEqualTo(String value) {
            addCriterion("FIsGroup <>", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupGreaterThan(String value) {
            addCriterion("FIsGroup >", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupGreaterThanOrEqualTo(String value) {
            addCriterion("FIsGroup >=", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupLessThan(String value) {
            addCriterion("FIsGroup <", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupLessThanOrEqualTo(String value) {
            addCriterion("FIsGroup <=", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupLike(String value) {
            addCriterion("FIsGroup like", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupNotLike(String value) {
            addCriterion("FIsGroup not like", value, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupIn(List<String> values) {
            addCriterion("FIsGroup in", values, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupNotIn(List<String> values) {
            addCriterion("FIsGroup not in", values, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupBetween(String value1, String value2) {
            addCriterion("FIsGroup between", value1, value2, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisgroupNotBetween(String value1, String value2) {
            addCriterion("FIsGroup not between", value1, value2, "fisgroup");
            return (Criteria) this;
        }

        public Criteria andFisprovincialIsNull() {
            addCriterion("FIsProvincial is null");
            return (Criteria) this;
        }

        public Criteria andFisprovincialIsNotNull() {
            addCriterion("FIsProvincial is not null");
            return (Criteria) this;
        }

        public Criteria andFisprovincialEqualTo(String value) {
            addCriterion("FIsProvincial =", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialNotEqualTo(String value) {
            addCriterion("FIsProvincial <>", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialGreaterThan(String value) {
            addCriterion("FIsProvincial >", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialGreaterThanOrEqualTo(String value) {
            addCriterion("FIsProvincial >=", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialLessThan(String value) {
            addCriterion("FIsProvincial <", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialLessThanOrEqualTo(String value) {
            addCriterion("FIsProvincial <=", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialLike(String value) {
            addCriterion("FIsProvincial like", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialNotLike(String value) {
            addCriterion("FIsProvincial not like", value, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialIn(List<String> values) {
            addCriterion("FIsProvincial in", values, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialNotIn(List<String> values) {
            addCriterion("FIsProvincial not in", values, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialBetween(String value1, String value2) {
            addCriterion("FIsProvincial between", value1, value2, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andFisprovincialNotBetween(String value1, String value2) {
            addCriterion("FIsProvincial not between", value1, value2, "fisprovincial");
            return (Criteria) this;
        }

        public Criteria andForderIsNull() {
            addCriterion("FOrder is null");
            return (Criteria) this;
        }

        public Criteria andForderIsNotNull() {
            addCriterion("FOrder is not null");
            return (Criteria) this;
        }

        public Criteria andForderEqualTo(Integer value) {
            addCriterion("FOrder =", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotEqualTo(Integer value) {
            addCriterion("FOrder <>", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderGreaterThan(Integer value) {
            addCriterion("FOrder >", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderGreaterThanOrEqualTo(Integer value) {
            addCriterion("FOrder >=", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderLessThan(Integer value) {
            addCriterion("FOrder <", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderLessThanOrEqualTo(Integer value) {
            addCriterion("FOrder <=", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderIn(List<Integer> values) {
            addCriterion("FOrder in", values, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotIn(List<Integer> values) {
            addCriterion("FOrder not in", values, "forder");
            return (Criteria) this;
        }

        public Criteria andForderBetween(Integer value1, Integer value2) {
            addCriterion("FOrder between", value1, value2, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotBetween(Integer value1, Integer value2) {
            addCriterion("FOrder not between", value1, value2, "forder");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_node
     *
     * @mbggenerated do_not_delete_during_merge Fri Aug 16 15:52:36 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_node
     *
     * @mbggenerated Fri Aug 16 15:52:36 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}