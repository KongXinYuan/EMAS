package com.evmtv.epg.entity;

import java.util.ArrayList;
import java.util.List;

import com.evmtv.epg.request.BaseRequest;

public class TNodeExample extends BaseRequest{
    /**
	 * @field serialVersionUID
	 * @field_type long
	 */
	private static final long serialVersionUID = -87437683964828269L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public TNodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFnameIsNull() {
            addCriterion("FName is null");
            return (Criteria) this;
        }

        public Criteria andFnameIsNotNull() {
            addCriterion("FName is not null");
            return (Criteria) this;
        }

        public Criteria andFnameEqualTo(String value) {
            addCriterion("FName =", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotEqualTo(String value) {
            addCriterion("FName <>", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThan(String value) {
            addCriterion("FName >", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThanOrEqualTo(String value) {
            addCriterion("FName >=", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLessThan(String value) {
            addCriterion("FName <", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLessThanOrEqualTo(String value) {
            addCriterion("FName <=", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLike(String value) {
            addCriterion("FName like", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotLike(String value) {
            addCriterion("FName not like", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameIn(List<String> values) {
            addCriterion("FName in", values, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotIn(List<String> values) {
            addCriterion("FName not in", values, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameBetween(String value1, String value2) {
            addCriterion("FName between", value1, value2, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotBetween(String value1, String value2) {
            addCriterion("FName not between", value1, value2, "fname");
            return (Criteria) this;
        }

        public Criteria andFtypeIsNull() {
            addCriterion("FType is null");
            return (Criteria) this;
        }

        public Criteria andFtypeIsNotNull() {
            addCriterion("FType is not null");
            return (Criteria) this;
        }

        public Criteria andFtypeEqualTo(String string) {
            addCriterion("FType =", string, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeNotEqualTo(Integer value) {
            addCriterion("FType <>", value, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeGreaterThan(Integer value) {
            addCriterion("FType >", value, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("FType >=", value, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeLessThan(Integer value) {
            addCriterion("FType <", value, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeLessThanOrEqualTo(Integer value) {
            addCriterion("FType <=", value, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeIn(List<Integer> values) {
            addCriterion("FType in", values, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeNotIn(List<Integer> values) {
            addCriterion("FType not in", values, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeBetween(Integer value1, Integer value2) {
            addCriterion("FType between", value1, value2, "ftype");
            return (Criteria) this;
        }

        public Criteria andFtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("FType not between", value1, value2, "ftype");
            return (Criteria) this;
        }

        public Criteria andFischeckedIsNull() {
            addCriterion("FIsChecked is null");
            return (Criteria) this;
        }

        public Criteria andFischeckedIsNotNull() {
            addCriterion("FIsChecked is not null");
            return (Criteria) this;
        }

        public Criteria andFischeckedEqualTo(String value) {
            addCriterion("FIsChecked =", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedNotEqualTo(String value) {
            addCriterion("FIsChecked <>", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedGreaterThan(String value) {
            addCriterion("FIsChecked >", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedGreaterThanOrEqualTo(String value) {
            addCriterion("FIsChecked >=", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedLessThan(String value) {
            addCriterion("FIsChecked <", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedLessThanOrEqualTo(String value) {
            addCriterion("FIsChecked <=", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedLike(String value) {
            addCriterion("FIsChecked like", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedNotLike(String value) {
            addCriterion("FIsChecked not like", value, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedIn(List<String> values) {
            addCriterion("FIsChecked in", values, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedNotIn(List<String> values) {
            addCriterion("FIsChecked not in", values, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedBetween(String value1, String value2) {
            addCriterion("FIsChecked between", value1, value2, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFischeckedNotBetween(String value1, String value2) {
            addCriterion("FIsChecked not between", value1, value2, "fischecked");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyIsNull() {
            addCriterion("FIsProvinceCompany is null");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyIsNotNull() {
            addCriterion("FIsProvinceCompany is not null");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyEqualTo(String value) {
            addCriterion("FIsProvinceCompany =", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyNotEqualTo(String value) {
            addCriterion("FIsProvinceCompany <>", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyGreaterThan(String value) {
            addCriterion("FIsProvinceCompany >", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyGreaterThanOrEqualTo(String value) {
            addCriterion("FIsProvinceCompany >=", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyLessThan(String value) {
            addCriterion("FIsProvinceCompany <", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyLessThanOrEqualTo(String value) {
            addCriterion("FIsProvinceCompany <=", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyLike(String value) {
            addCriterion("FIsProvinceCompany like", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyNotLike(String value) {
            addCriterion("FIsProvinceCompany not like", value, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyIn(List<String> values) {
            addCriterion("FIsProvinceCompany in", values, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyNotIn(List<String> values) {
            addCriterion("FIsProvinceCompany not in", values, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyBetween(String value1, String value2) {
            addCriterion("FIsProvinceCompany between", value1, value2, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFisprovincecompanyNotBetween(String value1, String value2) {
            addCriterion("FIsProvinceCompany not between", value1, value2, "fisprovincecompany");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIsNull() {
            addCriterion("FUserGroupId is null");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIsNotNull() {
            addCriterion("FUserGroupId is not null");
            return (Criteria) this;
        }

        public Criteria andFusergroupidEqualTo(Long value) {
            addCriterion("FUserGroupId =", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotEqualTo(Long value) {
            addCriterion("FUserGroupId <>", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidGreaterThan(Long value) {
            addCriterion("FUserGroupId >", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidGreaterThanOrEqualTo(Long value) {
            addCriterion("FUserGroupId >=", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidLessThan(Long value) {
            addCriterion("FUserGroupId <", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidLessThanOrEqualTo(Long value) {
            addCriterion("FUserGroupId <=", value, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidIn(List<Long> values) {
            addCriterion("FUserGroupId in", values, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotIn(List<Long> values) {
            addCriterion("FUserGroupId not in", values, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidBetween(Long value1, Long value2) {
            addCriterion("FUserGroupId between", value1, value2, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andFusergroupidNotBetween(Long value1, Long value2) {
            addCriterion("FUserGroupId not between", value1, value2, "fusergroupid");
            return (Criteria) this;
        }

        public Criteria andForderIsNull() {
            addCriterion("FOrder is null");
            return (Criteria) this;
        }

        public Criteria andForderIsNotNull() {
            addCriterion("FOrder is not null");
            return (Criteria) this;
        }

        public Criteria andForderEqualTo(Integer value) {
            addCriterion("FOrder =", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotEqualTo(Integer value) {
            addCriterion("FOrder <>", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderGreaterThan(Integer value) {
            addCriterion("FOrder >", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderGreaterThanOrEqualTo(Integer value) {
            addCriterion("FOrder >=", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderLessThan(Integer value) {
            addCriterion("FOrder <", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderLessThanOrEqualTo(Integer value) {
            addCriterion("FOrder <=", value, "forder");
            return (Criteria) this;
        }

        public Criteria andForderIn(List<Integer> values) {
            addCriterion("FOrder in", values, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotIn(List<Integer> values) {
            addCriterion("FOrder not in", values, "forder");
            return (Criteria) this;
        }

        public Criteria andForderBetween(Integer value1, Integer value2) {
            addCriterion("FOrder between", value1, value2, "forder");
            return (Criteria) this;
        }

        public Criteria andForderNotBetween(Integer value1, Integer value2) {
            addCriterion("FOrder not between", value1, value2, "forder");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_node
     *
     * @mbggenerated do_not_delete_during_merge Mon Sep 09 16:36:28 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_node
     *
     * @mbggenerated Mon Sep 09 16:36:28 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = "t_node."+condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = "t_node."+condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = "t_node."+condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}