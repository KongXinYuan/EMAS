package com.evmtv.epg.entity;

import java.util.ArrayList;
import java.util.List;

import com.evmtv.epg.request.BaseRequest;

public class TDbConfigExample extends BaseRequest{
    /**
	 * @field serialVersionUID
	 * @field_type long
	 */
	private static final long serialVersionUID = 1L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public TDbConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFipIsNull() {
            addCriterion("FIp is null");
            return (Criteria) this;
        }

        public Criteria andFipIsNotNull() {
            addCriterion("FIp is not null");
            return (Criteria) this;
        }

        public Criteria andFipEqualTo(String value) {
            addCriterion("FIp =", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipNotEqualTo(String value) {
            addCriterion("FIp <>", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipGreaterThan(String value) {
            addCriterion("FIp >", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipGreaterThanOrEqualTo(String value) {
            addCriterion("FIp >=", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipLessThan(String value) {
            addCriterion("FIp <", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipLessThanOrEqualTo(String value) {
            addCriterion("FIp <=", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipLike(String value) {
            addCriterion("FIp like", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipNotLike(String value) {
            addCriterion("FIp not like", value, "fip");
            return (Criteria) this;
        }

        public Criteria andFipIn(List<String> values) {
            addCriterion("FIp in", values, "fip");
            return (Criteria) this;
        }

        public Criteria andFipNotIn(List<String> values) {
            addCriterion("FIp not in", values, "fip");
            return (Criteria) this;
        }

        public Criteria andFipBetween(String value1, String value2) {
            addCriterion("FIp between", value1, value2, "fip");
            return (Criteria) this;
        }

        public Criteria andFipNotBetween(String value1, String value2) {
            addCriterion("FIp not between", value1, value2, "fip");
            return (Criteria) this;
        }

        public Criteria andFuserIsNull() {
            addCriterion("FUser is null");
            return (Criteria) this;
        }

        public Criteria andFuserIsNotNull() {
            addCriterion("FUser is not null");
            return (Criteria) this;
        }

        public Criteria andFuserEqualTo(String value) {
            addCriterion("FUser =", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserNotEqualTo(String value) {
            addCriterion("FUser <>", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserGreaterThan(String value) {
            addCriterion("FUser >", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserGreaterThanOrEqualTo(String value) {
            addCriterion("FUser >=", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserLessThan(String value) {
            addCriterion("FUser <", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserLessThanOrEqualTo(String value) {
            addCriterion("FUser <=", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserLike(String value) {
            addCriterion("FUser like", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserNotLike(String value) {
            addCriterion("FUser not like", value, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserIn(List<String> values) {
            addCriterion("FUser in", values, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserNotIn(List<String> values) {
            addCriterion("FUser not in", values, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserBetween(String value1, String value2) {
            addCriterion("FUser between", value1, value2, "fuser");
            return (Criteria) this;
        }

        public Criteria andFuserNotBetween(String value1, String value2) {
            addCriterion("FUser not between", value1, value2, "fuser");
            return (Criteria) this;
        }

        public Criteria andFpasswdIsNull() {
            addCriterion("FPasswd is null");
            return (Criteria) this;
        }

        public Criteria andFpasswdIsNotNull() {
            addCriterion("FPasswd is not null");
            return (Criteria) this;
        }

        public Criteria andFpasswdEqualTo(String value) {
            addCriterion("FPasswd =", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdNotEqualTo(String value) {
            addCriterion("FPasswd <>", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdGreaterThan(String value) {
            addCriterion("FPasswd >", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdGreaterThanOrEqualTo(String value) {
            addCriterion("FPasswd >=", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdLessThan(String value) {
            addCriterion("FPasswd <", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdLessThanOrEqualTo(String value) {
            addCriterion("FPasswd <=", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdLike(String value) {
            addCriterion("FPasswd like", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdNotLike(String value) {
            addCriterion("FPasswd not like", value, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdIn(List<String> values) {
            addCriterion("FPasswd in", values, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdNotIn(List<String> values) {
            addCriterion("FPasswd not in", values, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdBetween(String value1, String value2) {
            addCriterion("FPasswd between", value1, value2, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFpasswdNotBetween(String value1, String value2) {
            addCriterion("FPasswd not between", value1, value2, "fpasswd");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNull() {
            addCriterion("FBranchId is null");
            return (Criteria) this;
        }

        public Criteria andFbranchidIsNotNull() {
            addCriterion("FBranchId is not null");
            return (Criteria) this;
        }

        public Criteria andFbranchidEqualTo(Long value) {
            addCriterion("FBranchId =", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotEqualTo(Long value) {
            addCriterion("FBranchId <>", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThan(Long value) {
            addCriterion("FBranchId >", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidGreaterThanOrEqualTo(Long value) {
            addCriterion("FBranchId >=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThan(Long value) {
            addCriterion("FBranchId <", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidLessThanOrEqualTo(Long value) {
            addCriterion("FBranchId <=", value, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidIn(List<Long> values) {
            addCriterion("FBranchId in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotIn(List<Long> values) {
            addCriterion("FBranchId not in", values, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidBetween(Long value1, Long value2) {
            addCriterion("FBranchId between", value1, value2, "fbranchid");
            return (Criteria) this;
        }

        public Criteria andFbranchidNotBetween(Long value1, Long value2) {
            addCriterion("FBranchId not between", value1, value2, "fbranchid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_db_config
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 19 11:25:55 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_db_config
     *
     * @mbggenerated Fri Jul 19 11:25:55 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}